<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Vue on Plutslet0316</title>
        <link>https://tech.plutslet.pe.kr/categories/vue/</link>
        <description>Recent content in Vue on Plutslet0316</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>ko</language>
        <lastBuildDate>Wed, 14 Feb 2024 00:34:14 +0900</lastBuildDate><atom:link href="https://tech.plutslet.pe.kr/categories/vue/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Vue에서 이미지 src 동적으로 할당하기</title>
        <link>https://tech.plutslet.pe.kr/post/vue%EC%97%90%EC%84%9C-%EC%9D%B4%EB%AF%B8%EC%A7%80-src-%EB%8F%99%EC%A0%81%EC%9C%BC%EB%A1%9C-%ED%95%A0%EB%8B%B9%ED%95%98%EA%B8%B0/</link>
        <pubDate>Wed, 14 Feb 2024 00:34:14 +0900</pubDate>
        
        <guid>https://tech.plutslet.pe.kr/post/vue%EC%97%90%EC%84%9C-%EC%9D%B4%EB%AF%B8%EC%A7%80-src-%EB%8F%99%EC%A0%81%EC%9C%BC%EB%A1%9C-%ED%95%A0%EB%8B%B9%ED%95%98%EA%B8%B0/</guid>
        <description>&lt;p&gt;Vue에서 이미지를 동적으로 할당해야하는 부분이 있었습니다.&lt;br&gt;
대략 &lt;code&gt;/src/assets/images/img.png&lt;/code&gt; 이런 느낌의 string 타입을 반환하는 함수를 만들었고, 대략 &lt;code&gt;&amp;lt;img :src=&amp;quot;imgSrc()&amp;quot;&amp;gt;&lt;/code&gt; 이런 느낌으로 할당해봤죠.&lt;br&gt;
&lt;code&gt;npm run dev&lt;/code&gt; 통해 실행한 프로젝트에서는 위의 코드로도 잘 작동해서 문제가 없을 줄 알았습니다.&lt;br&gt;
하지만 빌드해서 확인한 페이지에서는 이미지가 표시되지 않았습니다.&lt;br&gt;
이유는 과연 뭘까요?&lt;/p&gt;
&lt;h3 id=&#34;문제&#34;&gt;문제&lt;/h3&gt;
&lt;p&gt;문제의 원인을 파악하고 보니 생각보다 간단한 문제였습니다.&lt;br&gt;
배포된 프로젝트에서 이미지를 가져올 때는 src가 위에서처럼 &amp;lsquo;/&amp;rsquo; 부터 시작하는 상대주소로 되어 있으면 안됩니다.&lt;br&gt;
상대주소로 된 링크를 참고한다면 대체 어떤 곳을 참고해야 할까요.&lt;br&gt;
참고할 주소를 찾지 못하게 되는 것이죠.&lt;/p&gt;
&lt;p&gt;로컬호스트이 아니라 빌드하여 배포한 프로젝트라면 src 부분은 &amp;lsquo;http://&amp;rsquo; 부터 시작하는 절대 링크 형태로 구성되어야 합니다.&lt;br&gt;
그럼, Vue에서 이미지의 src를 동적으로 할당하는 방법을 알아 봅시다.&lt;/p&gt;
&lt;h3 id=&#34;해결&#34;&gt;해결&lt;/h3&gt;
&lt;p&gt;아래의 방법을 사용하면 문자열로 된 상대주소를 동적으로 할당할 수 있게 됩니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;require 사용해 이미지 불러오기&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;require&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;`@/assets/images/img.png`&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;이미지를 &lt;code&gt;import&lt;/code&gt;한다는 의미로 &lt;code&gt;require&lt;/code&gt; 구문을 사용할 수 있습니다.
config에 사용하도록 설정된 module에 따라 사용할 수 없는 경우가 있습니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;동적으로 URL 만들기&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;URL&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;`/src/assets/images/img.png`&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;meta&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;url&lt;/span&gt;).&lt;span style=&#34;color:#a6e22e&#34;&gt;href&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;SSR에서는 동작하지 않는다고 합니다.&lt;br&gt;
브라우저와 Node.js 에서 &lt;code&gt;import.meta.url&lt;/code&gt;의 값이 달라지거나 서버 입장에서도 클라이언트의 호스트 url을 미리 결정할 수 없기 때문이라고 합니다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;public 폴더에 이미지 넣기&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;img&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/images/img.png&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;말 그대로 이미지를 프로젝트 내부에서 &lt;code&gt;assets&lt;/code&gt; 폴더가 아닌 &lt;code&gt;public&lt;/code&gt;에 넣어두는 방법입니다.&lt;br&gt;
public 폴더에 넣어두면 상대 주소를 사용해도 정상적으로 불러옵니다.&lt;/p&gt;
&lt;h3 id=&#34;참고링크&#34;&gt;참고링크&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://blogcreator.blog/post/39&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://blogcreator.blog/post/39&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://stackoverflow.com/questions/40491506/vue-js-dynamic-images-not-working-with-webpack&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://stackoverflow.com/questions/40491506/vue-js-dynamic-images-not-working-with-webpack&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        
    </channel>
</rss>
